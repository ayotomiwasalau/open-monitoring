name: Deploy Prometheus via Argo CD

on:
  push:
    branches: [ main, master ]
    paths: 
      - 'open-monitoring/prometheus_grafana/**'
      - '.github/workflows/prometheus-argocd-ci.yml'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
        - deploy
        - sync
        - delete

env:
  ARGOCD_NAMESPACE: argocd
  APP_NAME: kube-prom-stack
  MONITORING_NAMESPACE: monitoring

jobs:
  deploy-prometheus-argocd:
    runs-on: ubuntu-latest
    if: github.event.inputs.action != 'delete' || github.event_name == 'push'
    env:
      KUBECONFIG: kubeconfig
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
        
    - name: Check Argo CD installation
      run: |
        if ! kubectl get namespace $ARGOCD_NAMESPACE &> /dev/null; then
          echo "ERROR: Argo CD namespace not found. Please install Argo CD first."
          exit 1
        fi
        
    - name: Apply Argo CD Application
      run: |
        kubectl apply -f open-monitoring/prometheus_grafana/helm/argocd/promgra.yml
        
    - name: Trigger sync if needed
      if: github.event.inputs.action == 'sync' || github.event_name == 'push'
      run: |
        kubectl patch application $APP_NAME -n $ARGOCD_NAMESPACE --type merge \
          -p '{"operation": {"initiatedBy": {"username": "github-action"}, "sync": {"revision": "HEAD"}}}'